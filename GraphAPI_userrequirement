# Microsoft 365 메일 수집 시스템 v1.0.0

*(created 2025-01-01, last modified 2025-01-01)*

| 작성자  | 역할 | 이메일                                           |
| :--- | :- | :-------------------------------------------- |
| 작성자명 | 역할 | [email@example.com](mailto:email@example.com) |

---

## 1. 프로젝트 개요

### 🔍 배경

* Microsoft 365 사용자의 이메일 데이터를 **안전하게 수집·동기화**할 시스템이 필요
* OAuth 2.0 **Authorization Code Flow**로 사용자 권한을 위임하여 인증 처리

### 🎯 목표

* **Microsoft Graph API**를 이용한 안전한 메일 데이터 수집
* 다수 사용자 이메일 계정 및 설정파일 관리
* 다수 사용자 위임, 메일 조회, 메일 보내기 
* 갱신된 이메일 조회 및 알림 수신으로 증분 데잍 API로 송신
* 

### 💎 핵심 가치

| 가치          | 설명                              |
| :----------   |  :------------------------------ |
| **보안성**     | OAuth 2.0 기반 안전한 인증·권한 관리       |
| **효율성**     | Delta Query 활용 증분 동기화, 메일 수신 알림 |
| **사용자 친화성** | 간편한 웹 기반 인증 프로세스                |

### 👥 대상 사용자

| 유형      | 필요 사항                    |
| :------ | :----------------------- |
| 기업 사용자  | Microsoft 365 계정, 웹 브라우저 |
| 시스템 관리자 | 사용자 권한 관리, 동기화 상태 모니터링   |

---

## 2. 프로젝트 범위

### 포함

* 다중 사용자 계정 및 설정파일 관리
* OAuth 2.0 인증 및 토큰 관리
* Microsoft Graph API를 통한 메일 조회, 보내기
* 증분 메일 인지 및 동기화(델트링크, 웹훅)
* 수집 메일 저장·관리 & 기간별 메일 수집
* 데이터베이스로 계정 및 조회한 메일 히스토리 관리 

---

## 3. 기술 스택

## 3. 기술 스택 ― **전체 통합표**

| 구분                    | 패키지 / 엔진             | 버전                  | 용도 · 비고                          |
| :--------------------  | :------------------- | :------------------ | :------------------------------- |
| **언어 & 런타임**        | Python               | **3.11 권장** (3.10+) | 비동기 지원, MSAL 호환                  |
| **웹 · ASGI**          | FastAPI              | 0.104.1             | REST API 서버, OAuth 콜백            |
|                        | Uvicorn              | 0.24.0              | ASGI 실행 서버                       |
| **CLI**                | Typer                | 0.9.0               | 현대적 CLI 프레임워크                    |
|                       | Rich                 | 13.7.0              | 터미널 UI (컬러, 표, 프로그레스바)           |
| **데이터 검증 & 설정**    | Pydantic             | 2.5.0               | 데이터 검증·직렬화                       |
|                       | Pydantic-Settings    | 2.1.0               | 애플리케이션 설정 검증 (.env 포함)           |
|                       | Python-dotenv        | 1.0.0               | `.env` 파일 로딩                     |
| **HTTP 클라이언트**      | HTTPX                | 0.25.2              | 비동기 HTTP 호출                      |
|                       | Requests             | 2.31.0              | 동기 HTTP (호환용)                    |
|                       | aiohttp              | latest              | OAuth 콜백 서버 등 보조                 |
| **ORM · DB · 마이그레이션** | SQLAlchemy           | 2.0.23              | 비동기 ORM                          |
|                       | Alembic              | 1.13.1              | DB 마이그레이션                        |
|                       | PostgreSQL           | latest              | 프로덕션 메인 DB                       |
|                       | SQLite               | —                   | 개발·테스트용 경량 DB                    |
| **캐시 / 브로커**        | Redis                | 5.0.1               | 캐싱·메시지 브로커 *(Celery backend)*    |
| **비동기 & 백그라운드**   | asyncio              | builtin             | Python 표준 비동기 러너                 |
|                       | aiofiles             | 23.2.1              | 비동기 파일 I/O                       |
|                       | Celery               | 5.3.4               | 분산 작업 큐 *(선택)*                   |
| **재시도 · 복원력**      | tenacity             | 9.1.2               | 재시도·백오프 패턴                       |
| **인증 · 보안**         | MSAL                 | 1.25.0              | Microsoft Authentication Library |
|                       | Authlib              | latest              | OAuth 2.0 구현 보조                  |
|                       | python-jose          | latest              | JWT 서명·검증                        |
|                       | Custom OAuth Impl.   | —                   | Authorization Code + PKCE 로직     |
| **로깅 · 모니터링**         | structlog            | 23.2.0              | 구조화된(키-값) 로깅                     |
|                       | python-json-logger   | 2.0.7               | JSON 포맷터                         |
|                       | sentry-sdk\[fastapi] | 1.38.0              | 에러·성능 모니터링 *(선택)*                |
| **코드 품질**             | black                | 23.11.0             | 코드 포매터                           |
|                       | isort                | 5.12.0              | import 정렬                        |
| **테스팅**               | pytest               | 7.4.3               | 테스트 프레임워크                        |
|                       | pytest-asyncio       | 0.21.1              | 비동기 테스트 지원                       |
|                       | pytest-cov           | 4.1.0               | 커버리지 측정                          |
| **유틸리티**            | python-dateutil      | 2.8.2               | 고급 날짜·시간 처리                      |
| **개발 도구**           | VS Code              | —                   | 권장 IDE                           |
|                       | Git                  | —                   | 버전 관리                            |
|                       | Docker               | latest              | 컨테이너화 *(선택)*                     |
| **환경 관리**            | venv / conda         | —                   | 가상환경                             |
|                       | .env config          | —                   | 환경 변수 관리 (.env)                  |




## 4. 유즈 시나리오
### 4.1 GRAPH API 다중 계정 및 인증 관리
1. AUTH001 - 계정 등록(기본 : 권한위임)
- Authorization Code Flow 와 Devide code flow 중 인증방식 선택 후 필수 정보 입력하면 데이터베이스에 저장
- 두 방식에 공통된 테이블 A 를 두고 각각 B, C 테이블을 구성
2. AUTH002 - ID 또는 이메일 정보로 조회/변경/삭제
- ID 또는 이메일 정보로 조회/변경/삭제
- 모든 사용자 정보 상세 보기
- 사용자 특정 정보 검색
- 사용자 또는 모든 사용자 토큰 상태 정보 보기
3. AUTH003 - 인증하기
- 사용자정보(이메일/ID)와 인증과정(Authentification flow, device flow)에 따라 인증하기, 인증시 필요한 정보는 데이터베이스에 갖어와서 호출하기
- Authentification flow 에서 로그인 페이자 사용자에게 보내기(권한위임 과정)
- Microsoft OAuth 인증 URL을 웹 브라우저에 띄우기
- 특정 사용자 또는 모든 사용자 인증 하기 
- 인증 실패 시 에러 코드 데이터베이스에 저장
- 인증 성공 시 토크 저장(토큰 관련 테이블 생성 후 저장)
4. AUTH004 - 토큰 갱신
- 사용자별 토큰 상태 관리
- 토큰 유효성 검사 및 자동 갱신 설정
5. AUTH005 - 권한/동의 범위 점검 및 재요청
- 현재 저장된 스코프와 실제 필요한 스코프 diff- 부족시 사용자 동의 화면 재 노출
6. AUTH006 - 액세스/리프레시 토큰 폐기
- 특정 사용자 또는 전체 사용자 로그아웃
- 토큰 캐시 무효화 및 Graph API revokeSignSessions 호출
7. AUTH007 - 인증.토큰 로그 조회 API
- AUTH001-004 전 과정을 이벤트 스트림/DB에 저장
- 기간, 사용자 결과(성공/싪0) 기준 필터/다운로드

### 4.2 GRAPH API 메일 송수신 조회
## 1. MAIL001 - 특정 사용자 또는 모든 사용자 메일 조회
- 특정 사용자 또는 모든 사용자 GRAPH API 필터를 이용해서 기간별, 최근 N개, 메일 조회
- 특정 사용자 또는 모든 사용자 GRAPH API 필터를 이용해 본문타입(html, txt), 본문, 제목 조회
- 특정 사용자 또는 모든 사용자 GRAPH API 를 이용하여 송신, 수신, 송수신 메일 조회(위 기능 포함)
- 보낸 사용자, 읽은메일/안읽은 메일, 이름등 필터링 후 조회(위 기능 포함)
- 조회 후 데이터베이스 수신 히스토리 분석 후 신규 메일이면 API 엔드포인트로 넘기기
## 2. MAIL002 - 조회 기록 관리
- 이메일 조회 후 메일 제목/송신자/수신자/ID/송수신 시간 등 데이터베이스에 저장
## 3. MAIL003 - 메일 송신
- 메일 보내기
- Authentification flow 에서 인증 링크 메일로 보내기(인증 시 링크 보낼 사람 주소 인자로 넣기)
## 4. MAIL004 - 증분 메일 모니터 및 조회
- delta link 관리
- delta link 초기화 후 링크를 이용해서 갱신된 메일 조회 하고 데이터베이스에 기록이 없으면 API 엔드포인트로 보내기(임베딩 서버 외부 API 제공)
- 웹훅 방식으로 새로운 매일 송수신 시 알람 받기
- 압람 받고 데이터베이스 기록 확인 후 없으면 API 엔드포인트로 보내기
## 5. MAIL005 - 첨부파일 처리 & 오브젝트 스토리지 연동
- 첨부파일 ↔ Graph API /attachments 스트리밍 다운로드
- 크기 > X MB인 대용량은 S3/Blob 등으로 직업업로드 후 URL만 저장
## 6. MAIL006 본문·메타데이터 전처리 & PII 마스킹
- HTML → 텍스트 정규화, 스팸 서명 제거
- 이메일·전화번호·주민번호 등 PII 정규식 마스킹
## 7. MAIL007 외부 API 전송 상태 추적 & 재시도 큐
- API 호출 결과(성공/실패·HTTP Status) 저장
- 실패 건은 지수적 백오프(Exponential Back-off) 재시도
- 3회 이상 실패 시 DLQ(데드 레터 큐) 이동
## 8. MAIL008 이벤트 기반 실시간 푸시(Webhook) ↔ 폴링 대체
- subscription API로 webhook 등록·갱신(Renewal)
- 장애·타임아웃 시 폴링(MAIL001/004)로 자동 전환(Fallback)
## 9. MAIL009 수신 후 사용자 알림(옵션)	
- 특정 조건(키워드, 중요도)에 따라 Slack·Discord·SMS Webhook
- 알림 채널·필터는 사용자·테넌트 설정 테이블화




