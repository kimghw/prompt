## 5개씩 세그멘트 해주세요
## 원본 유지해 주세요.

# 사전 검토 
# 몇개의 세그멘트로 구성이 가능한지 우선 분석
# 작업 완료 수 어디부터 어디까지 수행했는지 분석
# 목차에 있는 내용은 참고 자료로만 활용


# JSON 세그멘테이션 요구사항 (최종 보완)

## 1. 핵심 원칙
- **3000자 기준**으로 서브섹션 단위 분할
- 같은 상위 섹션의 서브섹션들만 합침
- 각 세그먼트는 독립적인 객체로 관리

## 2. 세그먼트 구조

### 2.1 필수 필드
```json
{
  "document_title": "전체 문서 제목",
  "document_id": "문서 식별 번호",
  "version": "버전 정보",
  
  "segment_id": "{document_id}_고유번호",
  "segment_type": "main_content|table|annex|form|note|formula|figure_reference",
  
  "section_title": "현재 섹션 제목",
  "parent_section": "상위 섹션",
  "hierarchy_level": "number",
  "applicability": "적용 범위 정보",
  "subsections": ["포함된 하위 서브섹션 목록"],
  
  "content": "실제 텍스트 내용, 마크다운/ 원본 그대로",
  "content_type": "body|enclosure",
  "tables": [/* 테이블 마크다운 배열 */],
  "figures": [/* 그림 정보 배열 */],
  "notes": ["주석/각주 내용"],
  "cross_references": [/* 상세 참조 정보 */],
  
  "segment_navigation": {
    "previous_segment": "A1_001",
    "next_segment": "A1_003",
    "is_continued": true,
    "continuation_note": "Continued from previous segment"
  },
  
  "sheet_numbers": ["A1", "A2"],
  "char_count": 3000,
  "created_date": "2024",
  "document_type": "requirement",
  "language": "en"
}
```

### 2.2 테이블 구조 (ID 생성 규칙 적용)
```json
{
  "table_id": "{document_id}_TBL_{full_section_number}_{sequence}",
  "table_name": "테이블 제목",
  "table_type": "embedded_table|measurement_form|data_entry_form|reference_table",
  "table_content": "| 헤더1 | 헤더2 |\n|-------|-------|\n| 데이터1 | 데이터2 |"
}
```
예시: 
- `full_section_number`는 테이블이 실제로 위치한 섹션의 전체 번호를 사용
- 점(.)은 언더스코어(_)로 변환
- 해당 섹션 내에서 나타나는 순서대로 sequence 번호 부여


### 2.3 그림 구조 (ID 생성 규칙 적용)
```json
{
  "figure_id": "{document_id}_FIG_{section_number}_{sequence}",
  "figure_name": "그림 제목",
  "url": "URL 또는 경로",
  "description": "그림 설명"
}
```
예시: `"figure_id": "A1_FIG_3_2"` // A1 문서의 3번 섹션 두 번째 그림

### 2.4 참조 관계
- internal reference는 관련 id만 리스트로 관리
```json
{
  "cross_references": [ 
    {
      "reference_id": "UR z29",
      "reference_text": "in accordance with UR W29"
    },
    {
      "reference_id": "UR e29",
      "reference_text": "in accordance with UR W29"
    }
  ]
}

```

### 2.5 적용 범위 (applicability)
```json

- 상위 레벨의 적용 범위를 포함
{
  "applicability": {
    "applies_to": ["bulk carrier", "ore carrier"],
    "excludes": ["LNG carrier"],
    "conditions": {
      "min_length_m": 150,
      "equipment": ["EGCS"]
    },
    "effective_date": "2024-07-01"
  }
}
```

## 3. 세그먼트 분할 규칙

### 3.1 분할 예외 처리

### 절대 분할하지 않는 항목:
- **수식(formula)**: 수학 공식이나 계산식은 중간에 끊지 않음
- **단일 테이블**: 하나의 테이블은 분할하지 않음
- **코드 블록**: 프로그래밍 코드는 분할하지 않음

### 가능한 분할하지 않는 항목:
- **최하위 번호 목록**: 최하위 번호 및 아래 기호로 표시되는 문장
- **정의(definition)**: 용어 정의 부분
- **절차 단계**: Step 1, Step 2... 같은 절차

### 분할 가능한 경계:
- **문단 끝**
- **최하위 섹션 끝**
- **리스트 항목 끝**

### 세그멘크 결합/ 섹션 결합 
- **세그먼트 결합** : 연결된 세그먼트/셕션의 합이 3000자 이하인 경우 하나로 결합
- **같은 계층 레벨 결합** : 1 과 2 의 합이 3000 자 이하인 경우 1, 2 결합, 1은 2000 이고 2.1이 800 이면 결합 불가
- **작은 섹션** : 1000자 이하 이면 다음 섹션 또는 세그먼트와 결합

### 3.2 세그먼트 연결 정보
- 긴 내용이 여러 세그먼트로 분할된 경우 navigation 정보 제공
- `is_continued`: 다음 세그먼트로 이어지는지 여부
- `continuation_note`: 연속성 설명 (예: "Continued from previous segment")

## 4. 콘텐츠 분류

### 4.1 body (본문)
- 문서의 주요 내용
- 규정, 절차, 설명
- 번호가 매겨진 조항들
- 본문에 포함된 테이블

### 4.2 enclosure (첨부)
- Attachment, Enclosure
- Appendix, Annex
- Forms (양식)
- 참고자료

## 5. 세그멘테이션 프로세스

1. **문서 분석**: 전체 구조 파악
2. **내용 분류**: body와 enclosure 구분
3. **토큰 계산**: 각 서브섹션의 토큰 수 계산
4. **분할 규칙 적용**: never_split, prefer_not_split 확인
5. **그룹핑**: 같은 parent_section의 서브섹션들을 750 토큰 이하로 그룹화
6. **ID 생성**: 테이블과 그림에 규칙에 따른 ID 부여
7. **참조 추출**: 내용에서 참조 정보 추출 및 구조화
8. **연결 정보**: 분할된 세그먼트 간 navigation 정보 추가
9. **세그먼트 생성**: 각 그룹을 독립적인 세그먼트로 생성

## 6. 출력 형식

```json
[
  {
    "segment_id": "A1_001",
    "document_title": "...",
    "content_type": "body",
    "segment_navigation": {
      "previous_segment": null,
      "next_segment": "A1_002",
      "is_continued": true,
      "continuation_note": "Section continues in next segment"
    },
    // ... 모든 필수 필드
  },
  {
    "segment_id": "A1_002",
    "content_type": "body",
    "segment_navigation": {
      "previous_segment": "A1_001",
      "next_segment": "A1_003",
      "is_continued": false,
      "continuation_note": null
    },
    // ... 모든 필수 필드
  }
]
```

## 7. 주의사항
- 최소 제목 단위로 분할
- 각 세그먼트는 독립적으로 이해 가능해야 함
- 마크다운 형식으로 테이블 작성
- 분할 시 never_split 항목은 반드시 보호
- 연속된 세그먼트는 navigation으로 연결
