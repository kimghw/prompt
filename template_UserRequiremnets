## 유즈케이스/모듈별 코드 요구사항
   - 모듈에 어떤 알고리즘을 사용할 지는 cli나 api를 이용해서 선택 할 수 있게 구성
### 5.1 Composit 유스케이스/서비스
1. **Graph API 인증**
   - 권한위임 
   - OAuth 2.0 Authorization Code Flow 인증 시스템
   - 토큰 갱신
   - 멀티유저 사용자 설정파일 관리

2. **이메일 조회**
   - 기간 별 송신/수신/송수신 메일 검색
   - 각 모듈 다른 모듈로 변경 가능

3. **델타링크를 통한 이메일 조회**
   - 청크 + 질의, LLM 답변 생성
   - 각 모듈 다른 모듈로 변경 가능

4. **메일 송수신 시 알림**

### 5.1 Atomic 유스케이스
1. **문서 로더(Loader) 모듈**
   - 사용 : PyPDF, PyMuPDF, JSONLoader
   - 어답터 구현 : UnstructuredPDFLoader, TextLoader, WebBaseLoader
   - 요구사항 : 문서 로더를 어러 개 사용할 예정이기에 필요시 인터페이스, DI, 어댑터 적용

2. **텍스트 청킹 전략**
   - 사용: SemanticChunker
   - 어답터 구현: RecursiveCharacterTextSplitter(일반 텍스트), MarkdownTextSplitter(특정 형식의 Markdown 문서 존재 시)


3. **임베딩 모델**
   - 사용 : OpenAIEmbeddings (text-embedding-3-small)
   - 어답터 구현: HuggingFaceBgeEmbeddings (BAAI/bge-small-en-v1.5)

4. **벡터 저장 및 인덱스**
   - 사용 : Qdrant
   - 어답터 구현: Pinecone(설치안함), FAISS, ChromaDB(설치안함)

5. **리트리버**
   - 사용 : MultiVectorRetriever
   - 어답터 구현: MultiQueryRetriever, ParentDocumentRetriever, vectorstore.as_retriever(search_type="mmr"), MultiQueryRetriever,ContextualCompressionRetriever, SelfQueryRetriever

6. **API 데이터 업로드 & 처리**
   - 사용 : OpenAIEmbeddings (text-embedding-3-small)
   - 어답터 구현: HuggingFaceBgeEmbeddings (BAAI/bge-small-en-v1.5)

