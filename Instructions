# 프로젝트 관리 작업 지시사항 (개정판)

## 🚨 핵심 원칙 (상시 준수)

### 1. 작업 시 필수 체크리스트
- **사용자가 요청한 기능만 구현** (추가 기능 구현 금지)
- **에러 수정 시 해당 모듈만 컨텍스트 윈도우에 로드**
- **모든 변경사항은 productContext.md에 즉시 기록**
- **터미널 에러 발생 시 완전히 해결 후 task 종료**
- **파일당 350줄 초과 금지** (초과 시 클래스 분리)

### 2. 코드 작성 규칙
- **비동기 함수는 반드시 await 처리**
- **메서드 시그니처 일치 여부 확인**
- **API 응답 형식 검증 후 사용**
- **로그 기록으로 코드 흐름 추적**
- **외부 라이브러리/API 사용 시 공식 문서 참조**

### 3. 프로젝트 구조 규칙
- **패키지 관리: uv 사용**
- **환경 변수: .env 파일에 저장**
- **테스트 코드: 별도 tests/ 폴더에서 관리**
- **가상환경: 프로젝트명으로 생성, .gitignore에 추가**

## 📁 .MemoryBank 관리 지침

### 필수 파일 및 업데이트 시점

1. **use_scenarios.md** (사용자 요청 시마다)
   - 최신 요구사항만 반영
   - 변경사항은 [ ] 표시
   - 새로운 유즈케이스 제안 (시스템 미반영 표기)

2. **productContext.md** (에러 발생/해결 시)
   - 에러 내용 및 해결방법
   - 모듈 간 입출력 변경사항
   - 예방조치 방법

3. **taskContext.md** (작업 완료 시)
   - task별 진행사항
   - 주요 이슈 및 해결과정

4. **progressandTODO.md** (10분 이상 대기 또는 작업 완료 시)
   - 현재 진행상황
   - 다음 작업 목록

5. **techContext.md** (기술스택 변경 시)
   - 변경된 기술스택 업데이트
   - 외부 API/DB 사용지침은 .MemoryBank/reference/에 저장

6. **projectbrief.md** (프로젝트 목표 변경 시)
   - 핵심 요구사항 및 목표

7. **systemPatterns.md** (아키텍처 변경 시)
   - 프로젝트 아키텍처
   - 클래스 다이어그램


## 테스트 지침

### 테스트는 ./tests 폴더에 작성하고 관리한다.
### 단위테스트 완료시 ./tests/completed 폴더에 이동한다.
### .clineignore 에 ./tests/completed 를 추가 한다.

### 부분 테스트를 위해 각 모듈에 각각 관련되어 있는 폴더와 파일(루트인 경우) 리스트를 readme.md 파일이 작성


## ⚠️ 주의사항

- **작업 순서 엄격히 준수**
- **필요시 root 권한으로 실행**
- **호출 흐름 및 데이터 타입 확인 후 작업**
- **코드 예제는 불필요 (간략히 기록)**

---
*이 지시사항은 작업 중 주기적으로 참조하여 준수*
