1. 유저 요구사항 
# 유즈케이스/모듈별 코드 요구사항 (YAML)

module_code_requirements:
  general:
    - "모듈에 사용할 알고리즘은 CLI 또는 API 옵션으로 선택 가능하도록 구현"

  use_cases:
    composite:
      - name: "인증 및 이메일 변경 사항 확인"
        steps:
          - "다중 사용자 계정 관리"
          - "Graph API 인증"
          - "이메일 변경 사항 분석"

      - name: "갱신 이메일 메시지 API로 보내기"
        steps:
          - "이메일 변경 사항 분석"
          - "이메일 메시지 외부 API로 보내기"
          - "API로 보낸 메일 기록 DB 관리"

    atomic:
      - name: "다중 계정 및 설정 관리"
        steps:
          - "사용자 모든 계정 및 설정 목록 조회"
          - "활동 선택"
          - "계정 전환"
          - "새 계정 및 설정 추가"
          - "계정 제거"

      - name: "사용자 인증"
        steps:
          - "사용자 단독 인증"
          - "토큰 유효성 확인 및 갱신"
          - "사용자 권한 검증"
          - "사용자 프로필 조회"

      - name: "Graph API 인증"
        steps:
          - "권한위임"
          - "OAuth 2.0 Authorization Code Flow 인증 시스템"
          - "클라이언트 초기화"
          - "Graph API 연결 테스트"
          - "Graph API 오류 관리"

      - name: "이메일 변경사항 감지 및 분석"
        steps:
          - "이메일 메시지 조회"
          - "이메일 메시지 목록 조회"
          - "델타링크 초기화 및 링크를 이용한 조회"
          - "이메일 변경사항 조회(DB 활용)"
          - "웹훅 구독을 통한 이메일 변경 사항 조회"

      - name: "이메일 데이터 처리"
        steps:
          - "이메일 상세 조회"
          - "조건별 이메일 필터링 조회 (기간, 날짜, 최근 N개, 본문 text, 본문 html)"
          - "이메일 조회 시 기본 필터링 관리"
          - "이메일 첨부파일 조회"
          - "이메일 데이터 유효성 검증"

      - name: "외부 API 전송"
        steps:
          - "API 페이로드 준비"
          - "외부 API 전송"
          - "API 호출 재시도"
          - "API 응답 처리"
          - "API 응답 유효성 검증"

      - name: "데이터베이스 관리"
        steps:
          - "전송된 이메일 기록 관리"
          - "이메일 상태 업데이트"
          - "전송 이력 조회"
          - "오래된 기록 삭제"

2. 상위 아키텍쳐 구현

3. 기술 스택 조사
